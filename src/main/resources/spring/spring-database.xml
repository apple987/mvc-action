<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans      
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd      
                        http://www.springframework.org/schema/context      
                        http://www.springframework.org/schema/context/spring-context-4.3.xsd
                        http://www.springframework.org/schema/util 
                        http://www.springframework.org/schema/util/spring-util-4.3.xsd 
                        http://www.springframework.org/schema/aop 
                        http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
                        http://www.springframework.org/schema/tx      
                        http://www.springframework.org/schema/tx/spring-tx-4.3.xsd 
                        http://www.springframework.org/schema/mvc      
                        http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	<!-- 引入配置文件,最好此处一次性加载所有配置文件 -->
	<bean id="propConfig" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreUnresolvablePlaceholders" value="true"/>
		<property name="order" value="1"/>
		<property name="locations">
			<list>
				<value>classpath*:config/application.properties</value>
			</list>
		</property>
	</bean>
	<!-- 自动扫描,排除controller层，在spring-mvc中已经扫描 -->
	<context:component-scan base-package="com.rainsoft.*" >
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 数据源1 连接mysql -->
    <bean name="dataSource1" class="com.atomikos.jdbc.AtomikosDataSourceBean"  init-method="init" destroy-method="close">  
       <property name="uniqueResourceName">     
           <value>${db1.dbname}</value>     
       </property>     
       <property name="xaDataSourceClassName">     
           <value>${db1.xaDataSourceClassName}</value>     
       </property>  
       <property name="xaProperties">     
           <props>     
               <prop key="URL">${db1.url}</prop>     
               <prop key="user">${db1.username}</prop>     
               <prop key="password">${db1.password}</prop>     
           </props>     
       </property>     
      <property name="poolSize"><value>10</value></property>       
      <property name="maxPoolSize"><value>30</value></property>
      <property name="testQuery"><value>select 1 from dual</value></property>
    </bean>
    <!-- 数据源2 连接mysql -->
    <bean name="dataSource2" class="com.atomikos.jdbc.AtomikosDataSourceBean"  init-method="init" destroy-method="close">  
       <property name="uniqueResourceName">     
           <value>${db2.dbname}</value>     
       </property>     
       <property name="xaDataSourceClassName">     
           <value>${db2.xaDataSourceClassName}</value>     
       </property>  
       <property name="xaProperties">     
           <props>     
               <prop key="URL">${db2.url}</prop>     
               <prop key="user">${db2.username}</prop>     
               <prop key="password">${db2.password}</prop>     
           </props>     
       </property>     
      <property name="poolSize"><value>10</value></property>       
      <property name="maxPoolSize"><value>30</value></property>  
      <property name="testQuery"><value>select 1 from dual</value></property>   
    </bean>
    <!-- jta事务管理 -->
	<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"  
	        init-method="init" destroy-method="close">  
	        <property name="forceShutdown">  
	            <value>true</value>  
	        </property>  
	</bean> 
	    
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">  
	        <property name="transactionTimeout" value="300" />  
	</bean>   
	
	<!-- spring 事务管理器 -->
   <bean id="springTransactionManager"  
	        class="org.springframework.transaction.jta.JtaTransactionManager">  
	        <property name="transactionManager">  
	            <ref bean="atomikosTransactionManager" />  
	        </property>  
	        <property name="userTransaction">  
	            <ref bean="atomikosUserTransaction" />  
	        </property>  
    </bean>  
	  
	
	<!-- 数据源1配置文件 -->
	<!-- <bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/rainsoft/mvc/mapper/*.xml</value>
			</list>
		</property>
	</bean> -->
	<!-- 数据源配置spring-plugins插件方式使用page-helper分页插件 -->
	<bean id="sqlSessionFactory1" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource1" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/rainsoft/mvc/mapper/*.xml</value>
			</list>
		</property>
		<property name="plugins">
        <array>
            <bean class="com.github.pagehelper.PageHelper">
                <property name="properties">
                    <value>
                     	dialect=mysql
                        reasonable=true
                        offsetAsPageNum=true
                        rowBoundsWithCount=true
                        pageSizeZero=true
                        params=pageNum=start;pageSize=limit;pageSizeZero=zero;reasonable=heli;count=contsql
                    </value>
                </property>
            </bean>
        </array>
    </property>
	</bean>
	
	<!-- 数据源2配置文件 -->
	<bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/rainsoft/mvc/mybatis/*.xml</value>
			</list>
		</property>
	</bean>
	<!-- <bean id="sqlSessionFactory2" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource2" />
		<property name="mapperLocations">
			<list>
				<value>classpath:com/rainsoft/mvc/mybatis/*.xml</value>
			</list>
		</property>
	</bean> -->

	<!-- AOP配置事务 -->
	<tx:advice id="transactionAdvice" transaction-manager="springTransactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="query*" read-only="true" propagation="NOT_SUPPORTED" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception"/>
			<tx:method name="*" read-only="true"/>
		</tx:attributes>
	</tx:advice>

	<!-- 配置AOP切面 -->
	<aop:config>
		<aop:pointcut id="transactionPointcut" expression="execution(* com.rainsoft.*.service.*.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>
    
    <!-- 注解配置事务 -->
	<tx:annotation-driven transaction-manager="springTransactionManager" />
    
	<!-- 配置数据源1 dao层公用类 -->
	<bean id="sqlSession1" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory1" />
	</bean>

	<bean id="baseDao" class="com.rainsoft.core.dao.BaseDao">
		<property name="sqlSessionTemplate" ref="sqlSession1" />
	</bean>
	
	<!-- 配置数据源2 dao层公用类 -->
	<bean id="sqlSession2" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory2" />
	</bean>
	<bean id="salveDao" class="com.rainsoft.core.dao.SalveDao">
		<property name="sqlSessionTemplate" ref="sqlSession2" />
	</bean>

  
	<!-- 加载属性配置文件 -->
	<util:properties id="mailInfo" location="classpath:config/application.properties" />
	
</beans>    