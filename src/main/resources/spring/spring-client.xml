<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- 简单demo -->
	<!-- <bean id="helloRemoting"
		class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl" value="${remoting.isecbiz.host}/hello/Remoting" />
		<property name="serviceInterface" value="com.rainsoft.mvc.service.RpcHelloRemoting" />
	</bean> -->
	<!-- 数据中断 -->
<!-- 	<bean id="dataInterrupt"
		class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl" value="${remoting.isecbiz.host}/DataInterruptList" />
		<property name="serviceInterface" value="com.rainsoft.mvc.service.DataInterruptService" />
	</bean> -->
	
	<bean id="jwtUtils" class="com.rainsoft.module.util.JwtUtils">
		<property name="secret" value="${jwt.token.secret}" />
		<property name="expire" value="${jwt.token.expire}" />
		<property name="header" value="${jwt.token.header}" />
	</bean>
	<!-- 使用RestTemplate发送resetful请求 -->
	<bean id="requestFactory" class="org.springframework.http.client.SimpleClientHttpRequestFactory">  
        <property name="readTimeout" value="10000"/>  
        <property name="connectTimeout" value="5000"/>  
    </bean>  
  
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">  
        <constructor-arg ref="requestFactory"/>  
	        <property name="messageConverters">  
	            <list>  
			                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/> 
			                <!-- 下载使用 -->
					        <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
					        <bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
					        <bean class="org.springframework.http.converter.ResourceRegionHttpMessageConverter"/>
					        
					        <!-- XML处理 -->
						    <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
						    <bean class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
						    <bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" /> 
							<bean class="org.springframework.http.converter.StringHttpMessageConverter">  
			                    <property name="supportedMediaTypes">  
			                        <list>  
			                            <value>text/plain;charset=UTF-8</value>  
			                        </list>  
			                    </property>  
			                </bean>  
			                <!-- json采用fastjson处理 -->
							<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter4">
							    <property name="supportedMediaTypes">
					                    <list>  
					                        <!-- 前后顺序倒置，会导致返回前台的JSON是个字符串，而不是Object -->  
								            <value>application/json;charset=UTF-8</value>
								            <value>text/html;charset=UTF-8</value>    
								        </list>    
					            </property>
								<property name="fastJsonConfig">
									<bean class="com.alibaba.fastjson.support.config.FastJsonConfig">
										<property name="serializerFeatures">
											<array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
												<!-- 避免循环引用 -->
												<value>DisableCircularReferenceDetect</value>
												<!-- 是否输出值为null的字段 -->
												<value>WriteMapNullValue</value>
												<!-- 数值字段如果为null,输出为0,而非null -->
												<value>WriteNullNumberAsZero</value>
												<!-- 字符类型字段如果为null,输出为"",而非null -->
												<value>WriteNullStringAsEmpty</value>
												<!-- List字段如果为null,输出为[],而非null -->
												<value>WriteNullListAsEmpty</value>
												<!-- Boolean字段如果为null,输出为false,而非null -->
												<value>WriteNullBooleanAsFalse</value>
												<!-- 输出key显示双引号 -->
												<value>QuoteFieldNames</value>
												<!-- 日期格式化显示,默认格式化日期为yyyy-MM-dd HH:mm:ss -->
												<!-- <value>WriteDateUseDateFormat</value> -->
											</array>
										</property>
										<!-- 日期格式化结果 -->
										<property name="dateFormat" value="yyyy-MM-dd HH:mm:ss"></property>
								</bean>
							</property>
					</bean>
            </list>  
        </property>  
    </bean>  
    
    <!--定义solr的server-->  
    <bean id="httpSolrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">  
        <constructor-arg name="baseURL" value="${apache.solr.url}"/>  
        <!-- 设置响应解析器 -->    
        <property name="parser">  
            <bean class="org.apache.solr.client.solrj.impl.XMLResponseParser"/>  
        </property>  
        <!-- 设置重试次数-->  
        <property name="maxRetries" value="${apache.solr.maxRetries}"/>  
        <!-- 建立连接的最长时间 -->  
        <property name="connectionTimeout" value="${apache.solr.connectionTimeout}"/>  
    </bean>  
</beans>